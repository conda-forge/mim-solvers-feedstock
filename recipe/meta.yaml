{% set name = "mim-solvers" %}
{% set version = "0.1.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/machines-in-motion/mim_solvers/releases/download/v{{ version }}/mim_solvers-{{ version }}.tar.gz
  sha256: 558a901d0905a6b2d28316d34880d724534cd9b34a5218ac673fd00d3c1485ed

build:
  number: 2
  skip: true  # [win]
  run_exports:
    - {{ pin_subpackage(name|lower, max_pin='x.x.x') }}
  missing_dso_whitelist:
    - lib/libgomp.so.1   # [linux]
    - lib/libomp.dylib   # [osx]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - cmake
    - make
    - pkg-config
    - doxygen
  host:
    - libboost-python-devel
    - crocoddyl
    - proxsuite
    - eigen
    - eigenpy
    - python
    - numpy
  run:
    - python

test:
  requires:
    - pkg-config
  commands:
    - pkg-config --modversion mim_solvers
    - test -f $PREFIX/lib/libmim_solvers${SHLIB_EXT}  # [unix]
  imports:
    - mim_solvers

about:
  home: https://github.com/machines-in-motion/mim_solvers
  license: BSD-3-Clause
  license_file: LICENSE
  summary: Implementation of numerical solvers used in the Machines in Motion Laboratory
  description: |
    Implementation of numerical solvers used in the Machines in Motion Laboratory.
    In particular, the Sequential Quadratic Programming (SQP) solver that solves efficiently nonlinear constrained OCPs.
    All solvers are implemented by using Crocoddyl (v2.0) as the base software.
    Consquently, Crocoddyl users can use our efficient solvers while constructing their OCPs using the same API they are used to.
  doc_url: https://github.com/machines-in-motion/mim_solvers
  dev_url: https://github.com/machines-in-motion/mim_solvers

extra:
  recipe-maintainers:
    - jcarpent
    - ajordana
    - ymontmarin
